----------------------------------------------------------------------
----------------------------------------------------------------------
--  -------    ----      ---------------------------------------------
--  -----  ----  --  -  -  -------------------------------------------
--  -----  -  -  --  ----  -------------------------------------------
--  -----  ----  --  --  ---------------------------------------------
--     --  ----  --  ----  -------------------------------------------
----------------------------------------------------------------------
----------------------------------------------------------------------
Command Dos C:\nginx\html\Project01\composer update  --> Untuk melakukan UpDate Source

Command Dos C:\nginx\html\Project01\Laravel New L01

/*
Tunggu download programnya....
*/

----------------------------------------------------------------------
Command Dos C:\nginx\html\Project01\L01\php artisan serve --port=9999
----------------------------------------------------------------------
.env.MySQL
.env.SQLServer

Command Dos C:\nginx\html\Project01\L01\php artisan config:cache --env=MySQL
Command Dos C:\nginx\html\Project01\L01\php artisan config:cache --env=SQLServer

----------------------------------------------------------------------

Command Dos C:\nginx\html\Project01\L01\php artisan migrate
Command Dos C:\nginx\html\Project01\L01\php artisan migrate:fresh    (ini delete semua table dan insert ulang semua table)
Command Dos C:\nginx\html\Project01\L01\php artisan migrate:fresh --seed 

Command Dos C:\nginx\html\Project01\L01\php artisan db:seed --class=xxxxx 


----------------------------------------------------------------------

Command Dos C:\nginx\html\Project01\L01\php artisan make:provider WilEdiHelperServiceProvider
kemudian setelah setting coding di dalam file WilEdiHelperServiceProvider
maka jalanin
Command Dos C:\nginx\html\Project01\L01\php artisan config:cache --env=MySql
untuk clear cache

fnSoftWE.php

----------------------------------------------------------------------

Third Party
https://github.com/krlove/eloquent-model-generator (Fungsinya untuk otomatis create models)

Command Dos C:\nginx\html\Project01\L01\composer require krlove/eloquent-model-generator --dev

ke folder C:\nginx\html\Project01\L01\config\app.php
tambin sintax dibawah ini
Krlove\EloquentModelGenerator\Provider\GeneratorServiceProvider::class, 

Cara pakai
Commad Dos C:\nginx\html\Project01\L01>php artisan krlove:generate:model Http\Models\Syscom --table-name=syscom
Commad Dos C:\nginx\html\Project01\L01>php artisan krlove:generate:model Syscom --table-name=syscom

Setting supaya filenya bisa ke folder yang anda mau.
buat file baru namanya eloquent_model_generator.php
taruh di: C:\nginx\html\Project01\L01\config\eloquent_model_generator.php
tiap ganti valuenya harus config:cache


Command Dos C:\nginx\html\Project01\L01\composer require barryvdh/laravel-dompdf

config/app.php
  'providers' => [
    ....
    Barryvdh\DomPDF\ServiceProvider::class,
  ],
  'aliases' => [
    ....
    'PDF' => Barryvdh\DomPDF\Facade::class,
  ]

----------------------------------------------------------------------


Commad Dos C:\nginx\html\Project01\L01>composer dumpautoload
untuk clear cache juga

Tiap Tambah File Seeder harus dumpautoload


----------------------------------------------------------------------
we.Make.Models.bat  (ini harus hati-hati pakai, kalau model sudah dimodifikasi jangan pakai ini lagi)
----------------------------------------------------------------------
Dalam models bisa buat
belongsTo
belongsToMany
hasOne   
hasMany

ini semua hanya bisa pakai di find(without array)
kalau pakai di all(), get(), where() harus foreach dulu baru bisa langsung pakai

----------------------------------------------------------------------
model TBLSYS
    // protected $appends = ['System Name'];
    protected $appends = ['RowId'];
    public function getRowIdAttribute()
    {
        return rtrim($this->attributes['TSDSCD']).rtrim($this->attributes['TSSYCD']);
    }

----------------------------------------------------------------------
https://eloquentbyexample.com/course/lesson/lesson-12-relationship-queries

AppServiceProvider
tambahin sintax dibawah ini (taruh di boot)

        \DB::listen(function ($event) {
            dump($event->sql);
            dump($event->bindings);
        });

Untuk me-trigger sql event kita
effect juga saat php artisan

----------------------------------------------------------------------

PDF

Command Dos C:\nginx\html\Project01\composer require codedge/laravel-fpdf  --> Untuk masukin Vendor PDF


Command Dos C:\nginx\html\Project01\php artisan vendor:publish --provider="Codedge\Fpdf\FpdfServiceProvider" --tag=config

composer remove vendor/codedge

----------------------------------------------------------------------








**********************************************************************
Begin Untuk Pertama Kali Belum Install nodejs dan quasar

install node-v9.5.0-x64.msi

habis itu ke command prompt

ketik 
npm -v

npm install -g quasar

npm install -g vue-cli

npm install -g quasar-cli

===============================
  quasar init Coba1
  cd coba1
  quasar dev

End Untuk Pertama Kali Belum Install nodejs dan quasar
**********************************************************************

----------------------------------------------------------------------
----------------------------------------------------------------------
----QUASAR
----------------------------------------------------------------------
----------------------------------------------------------------------
NPM Update

Command Dos C:\nginx\html\Project01\quasar inti Q01

Project Name : Q01
Project Project Name : Q01
Project Decription Name : Q01
pilih : vuex, axios
pilih : npm

Tunggu sampai selesai install
----------------------------------------------------------------------

Sebelum jalanin sintax dibawah ini config js dulu (C:\nginx\html\myQua\Qua\quasar.conf.js)        
Command Dos C:\nginx\html\Project01\q01\quasar dev

----------------------------------------------------------------------

didalam " build: " tambahin sintax ini
Sebelum anda jalanin sintax diatas itu (quasar dev)

      publicPath: '/Q01/',
      env: ctx.dev
        ? { // so on dev we'll have
          API: JSON.stringify('http://localhost:9999/api/')
          // API: JSON.stringify('http://172.30.9.32:8099/a5framework/lar/api/')
        }
        : { // and on build (production):
          // API: JSON.stringify('http://172.30.1.39:8099/a5framework/lar/api/') // ikut IP server untuk laravel 
          API: JSON.stringify('http://192.168.1.24:8099/a5framework/lar/api/') // ikut IP server untuk laravel 
        },

----------------------------------------------------------------------
Jika component ini, tidak ke install saat quasar inti q01 (new Quasar Project)
maka jalanin sintax dibawah ini

To install them, you can run: 
Command Dos C:\nginx\html\Project01\q01\npm install --save axios 
Command Dos C:\nginx\html\Project01\q01\npm install --save vuelidate 
Command Dos C:\nginx\html\Project01\q01\npm install vivus

after that 
Command Dos C:\nginx\html\Project01\q01\quasar new plugin axios
Command Dos C:\nginx\html\Project01\q01\quasar new plugin vuelidate


Setelah itu pergi ke C:\nginx\html\Project01\Q01\src\plugins\vuelidate.js

    import Vuelidate from 'vuelidate'

    export default ({ Vue }) => {
      Vue.use(Vuelidate)
    }


----------------------------------------------------------------------
Supaya Quasar bisa connect ke laravel
Di laravel harus install ini

Command Dos C:\nginx\html\Project01\l01\composer require barryvdh/laravel-cors

setelah itu jalanin comment ini

Command Dos C:\nginx\html\Project01\l01\php artisan vendor:publish --provider="Barryvdh\Cors\ServiceProvider"

	----------------------------------------------
	Setelah itu lagi, ke folder app\Http\Kernel.php
	tambahin sintax ini 
		\Barryvdh\Cors\HandleCors::class,
	di protected $middleware

	seperti contoh dibawah ini

	C:\nginx\html\Project01\l01\app\Http\Kernel.php
	    protected $middleware = [
	        // ...
	        \Barryvdh\Cors\HandleCors::class,
	    ];
	----------------------------------------------

	C:\nginx\html\Project01\L01\config\cors.php
	harus set ini true
	    'supportsCredentials' => true,
	----------------------------------------------



----------------------------------------------------------------------
Build Quasar (Compile)
----------------------------------------------------------------------

  quasar build


----------------------------------------------------------------------
----------------------------------------------------------------------
----------------------------------------------------------------------





--******************************************************************--
--******************************************************************--
----LIVE LIVE LIVE
--******************************************************************--
--******************************************************************--


wexits.com/cpanel
U : u6165746
P : terserah18

ssh --> download key
IP  : 83.136.216.123
Port: 65002


id_dsa_2

------------------------------------------------

buat Database Project01

User MySQL (wexits.com)
  u6165746_admin
  4DM1nn


lalu ke Project01
  composer update


------------------------------------------------

untuk Rewriting non-existing links to index.php

ini pasang di file .htaccess

<IfModule mod_rewrite.c>
RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.php [L]
</IfModule>



------------------------------------------------





Select *, @row_num := @row_num + 1 From (
SElect SLSLNOIY, SHDATE, SLITNOIY, SLQTYS, SLHARG, SLTOTL, 'SLS' As MODL From SHLINE
Left Join SHHEAD On SHSHNOIY = SLSHNOIY
Union All
SElect PLPLNOIY, PHDATE, PLITNOIY, PLQTYS, PLHARG, PLTOTL, 'PCH' As MODL From PHLINE
Left Join PHHEAD On PHPHNOIY = PLPHNOIY
) As A
, (SELECT @row_num := 0) R



Select 
  *
  , @row_num :=IF(  @key_val = ConCat(SLITNOIY,SHDATE) ,  @row_num + 1 , 1) As NoUrut 
  , @key_val := ConCat(SLITNOIY,SHDATE)
From (
  Select SLSLNOIY, SHDATE, SLITNOIY, SLQTYS, SLHARG, SLTOTL, 'SLS' As MODL From SHLINE
  Left Join SHHEAD On SHSHNOIY = SLSHNOIY
  Union All
  Select PLPLNOIY, PHDATE, PLITNOIY, PLQTYS, PLHARG, PLTOTL, 'PCH' As MODL From PHLINE
  Left Join PHHEAD On PHPHNOIY = PLPHNOIY
) As A
, (SELECT @row_num := 0) R
, (SELECT @key_val := 0) K
